"""
Django settings for forumo project.

Generated by 'django-admin startproject' using Django 2.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from decouple import config, Csv
import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Environment variables
SECRET_KEY = 'secret key'
DEBUG = config('DEBUG', default=False, cast=bool)
#ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())
ALLOWED_HOSTS = ['forumbackend.appspot.com','127.0.0.1']
# REST_FRAMEWORK
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    # http://www.django-rest-framework.org/api-guide/throttling/
    'DEFAULT_THROTTLE_CLASSES': (
        'rest_framework.throttling.ScopedRateThrottle',
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ),
    'DEFAULT_THROTTLE_RATES': {
        'create_user': '3/hour',
        'create_post': '3/min',
        'create_thread': '3/hour',
        'edit_user': '3/min',
        'login': '5/min',
        'anon': '60/min',
        'user': '120/min'
    }
}


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # third party packages
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',

    # local apps
    'accounts',
    'forums',
    'threads',
    'posts'
]

# https://github.com/ottoyiu/django-cors-headers
CORS_ORIGIN_ALLOW_ALL = True

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'rengorum.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'rengorum.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# DATABASES = {
#     # 'default': dj_database_url.config(
#     #     default=config('DATABASE_URL')
#     # )
#     'default': { 
#       'ENGINE': 'django.db.backends.postgresql_psycopg2',
#       'NAME': 'forum',
#       'HOST': '/cloudsql/forumbackend:us-central1:forum-db',
#       'PORT': '5432',
#       'USER': 'postgres',
#       'PASSWORD': 'shrestha'
#     }
# }
DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'HOST': '/cloudsql/forumbackend:us-central1:forum-db',
            'USER': 'postgres',
            'PORT': '5432',
            'PASSWORD': 'shrestha',
            'NAME': 'forum-db',
        }
    }

# [START db_setup]
# if os.getenv('GAE_APPLICATION', None):
    # Running on production App Engine, so connect to Google Cloud SQL using
    # the unix socket at /cloudsql/<your-cloudsql-connection string>
    
    
# else:
    # Running locally so connect to either a local MySQL instance or connect 
    # to Cloud SQL via the proxy.  To start the proxy via command line: 
    #    $ cloud_sql_proxy -instances=[INSTANCE_CONNECTION_NAME]=tcp:3306 
    # See https://cloud.google.com/sql/docs/mysql-connect-proxy
    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #         'HOST': '127.0.0.1',
    #         'PORT': '5432',
    #         'NAME': 'forum-db',
    #         'USER': 'postgres',
    #         'PASSWORD': 'shrestha',
    #     }
    # }
# [END db_setup]

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/


RENGORUM_DIR = os.path.dirname(BASE_DIR)

BACKEND_DIR = os.path.join(RENGORUM_DIR, 'backend')
# if os.getenv('GAE_APPLICATION', None):
STATIC_URL = 'https://storage.googleapis.com/app-forum-static/static/'
STATIC_ROOT='static'
    
# else:
#     STATIC_URL = '/static/'
#     STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'app-forum-static')

# 

#STATIC_URL = '/static/'
# MEDIA
# Absolute filesystem path to the directory that will hold user-uploaded files.
# Ref: https://stackoverflow.com/questions/34563454/django-imagefield-upload-to-path
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "media")


# STATICFILES_DIRS = [
#   # TODO: configure the name and path to your development static directory
#     os.path.join(BASE_DIR, 'static'), # static directory (in the top level directory) for local testing
# ]